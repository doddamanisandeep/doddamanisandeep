git init- initlize(.git directory will create)
once we a create a local file we can find 3 logical area's
1.working area				2.staging area			3.local repository 			4.Remote Repository
             ---------------------------->	     ---------------------->		------------------------>
		git add FN				git commit -m "message"		    git push az master
		git add .(All Files)			git commit -m "1st commit"	    git push sd new
		git add *(All files)			git commit -m "commit demo"	    git push ss develpoment
		git add *.java			
		git add *.sh								    git remote add az link(establish connection between local
 											    and remote repository
		git add *.py								    git remote -v (check linked status)
		git add FN1 FN2								    git remote remove az(remove the link)
	     <-------------------------
		git reset
		git reset FN


git log ---> to check the commit id and time
git show commitID ---> to check how many commits under a ID

Do configuration
----------------
git congig --global user.name "doddamanisandeep"
git config --global user.email "sandeepdoddamani7@gmail.com"

git config --global --list --> to check the configured email and username

git revert commitID --> contet will delete and 

git clean -n ---> to remove previously created files before commiting
git clean -f --> to delete previously created files before commiting



Day - 2
----------------------------------------------------------
.gitignore file

IDE(Intigrated Development Enviroment)
--------------------------------------
Eclipse
Myeclipse
NetBeans
Intelji

Visul studio code


.project
.classpath
.settings

/node_modules


Branch
---------------------------
Default branch is master

create, rename dellete for all one command that is git branch

git branch --> how many branches
git branch -r --> to cheeck how many branches in remote repository
git branch -a --> check both remote and local repo branches
git checkout BN --> to swith other branch
git merge  BN
git checkout -b new BN --> create and switch to new branch --> git checkout -b stage
git push az --all --> push all branches to remote repo
git


------------------------------------------------------------------------------------------------------------------
TAGS
-----------------------------


once we relese the project we will create tags



		Branch 					Tags

*Branch is mutable				* Tag is immutable
*git branch BN					* git tag TN
*git branch -d BN				* git tag -d TN
*git branch az --all(pushes all branches)	* git push az --tags
*git branch az BN(perticular Branch(		* git push az tag TN


Note: Branches we can create from any branch but tags we can only create from master branc bcz we are going to release project from master branch where code is ready for releaseh















 



























